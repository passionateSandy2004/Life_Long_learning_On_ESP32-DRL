#ifndef TRAINED_WEIGHTS_DUMMY_H
#define TRAINED_WEIGHTS_DUMMY_H

// Network dimensions
const int INPUT_DIM = 5;    // [player_x, bullet_x, bullet_y, enemy_x, enemy_y]
const int HIDDEN_DIM = 16;  // Reduced hidden layer size
const int OUTPUT_DIM = 3;   // 0: LEFT, 1: RIGHT, 2: SHOOT

// Dummy weights for initial training
const float weights1[INPUT_DIM][HIDDEN_DIM] = {
    {0.057336f, 0.013736f, 0.027293f, 0.069165f, 0.003521f, 0.043423f, 0.011182f, 0.044298f, 0.052093f, 0.084718f, 0.022728f, 0.034166f, 0.092912f, 0.093532f, 0.084964f, 0.018919f},
    {0.035477f, 0.064953f, 0.072155f, 0.009582f, 0.089346f, 0.017585f, 0.064037f, 0.095876f, 0.008570f, 0.082031f, 0.037027f, 0.008713f, 0.076655f, 0.060569f, 0.009606f, 0.041178f},
    {0.086216f, 0.017213f, 0.056748f, 0.056612f, 0.020919f, 0.072986f, 0.086366f, 0.010758f, 0.061945f, 0.058243f, 0.060505f, 0.022081f, 0.033277f, 0.021785f, 0.078413f, 0.009140f},
    {0.088949f, 0.019895f, 0.007404f, 0.038179f, 0.006423f, 0.021724f, 0.047294f, 0.090410f, 0.024213f, 0.019680f, 0.004976f, 0.086118f, 0.097297f, 0.048045f, 0.099433f, 0.059950f},
    {0.082819f, 0.088675f, 0.074096f, 0.013877f, 0.011914f, 0.070416f, 0.073671f, 0.069754f, 0.019236f, 0.019956f, 0.071118f, 0.096442f, 0.000146f, 0.040125f, 0.028571f, 0.025655f}
};

const float bias1[HIDDEN_DIM] = {
    0.090635f, 0.011633f, 0.034697f, 0.075489f, 0.042793f, 0.046322f, 0.055056f, 0.067080f,
    0.057144f, 0.006785f, 0.008911f, 0.009803f, 0.064811f, 0.038502f, 0.043442f, 0.046942f
};

const float weights2[HIDDEN_DIM][HIDDEN_DIM] = {
    {0.051167f, 0.020571f, 0.028928f, 0.086531f, 0.036898f, 0.072221f, 0.023518f, 0.050594f, 0.095142f, 0.008700f, 0.059843f, 0.099494f, 0.096868f, 0.075787f, 0.047410f, 0.075257f},
    {0.094277f, 0.009162f, 0.069787f, 0.041665f, 0.057615f, 0.012422f, 0.059868f, 0.092528f, 0.056412f, 0.016231f, 0.006650f, 0.082695f, 0.074994f, 0.042273f, 0.093138f, 0.097586f},
    {0.043545f, 0.020271f, 0.044968f, 0.044077f, 0.047094f, 0.020698f, 0.006050f, 0.052498f, 0.028404f, 0.087186f, 0.056035f, 0.073733f, 0.052539f, 0.026051f, 0.032822f, 0.004418f},
    {0.063473f, 0.094537f, 0.046118f, 0.014204f, 0.071962f, 0.027357f, 0.015443f, 0.049736f, 0.099513f, 0.022861f, 0.073335f, 0.072258f, 0.015751f, 0.080525f, 0.000417f, 0.090953f},
    {0.093883f, 0.029005f, 0.087179f, 0.005765f, 0.006101f, 0.026694f, 0.027072f, 0.076885f, 0.073884f, 0.055176f, 0.065075f, 0.027184f, 0.073628f, 0.026070f, 0.041718f, 0.060973f},
    {0.054452f, 0.010723f, 0.039815f, 0.046321f, 0.092660f, 0.062694f, 0.037275f, 0.010776f, 0.061155f, 0.019617f, 0.013798f, 0.076556f, 0.009580f, 0.026794f, 0.089299f, 0.029376f},
    {0.008699f, 0.083559f, 0.045427f, 0.076080f, 0.019188f, 0.028925f, 0.094249f, 0.076619f, 0.061371f, 0.091849f, 0.069527f, 0.045383f, 0.086125f, 0.045421f, 0.000939f, 0.030446f},
    {0.001413f, 0.051079f, 0.073519f, 0.084288f, 0.027916f, 0.056790f, 0.024637f, 0.015051f, 0.096387f, 0.027585f, 0.096864f, 0.095006f, 0.072119f, 0.070849f, 0.060959f, 0.008410f},
    {0.089306f, 0.015211f, 0.082605f, 0.031971f, 0.090505f, 0.040907f, 0.084199f, 0.024774f, 0.039218f, 0.092182f, 0.006004f, 0.030196f, 0.029197f, 0.095079f, 0.086194f, 0.089346f},
    {0.035401f, 0.053767f, 0.083911f, 0.033008f, 0.094073f, 0.053889f, 0.099295f, 0.063285f, 0.007009f, 0.074082f, 0.014972f, 0.022467f, 0.093117f, 0.039782f, 0.035068f, 0.065879f},
    {0.042818f, 0.050978f, 0.000175f, 0.024883f, 0.028852f, 0.058195f, 0.067606f, 0.086494f, 0.042975f, 0.056748f, 0.056065f, 0.072880f, 0.067646f, 0.093212f, 0.032543f, 0.056435f},
    {0.016777f, 0.051808f, 0.012111f, 0.090241f, 0.039621f, 0.089227f, 0.076645f, 0.001343f, 0.097231f, 0.052005f, 0.061601f, 0.095135f, 0.051093f, 0.017007f, 0.022431f, 0.012777f},
    {0.009678f, 0.088813f, 0.093179f, 0.066868f, 0.027816f, 0.040947f, 0.067333f, 0.040949f, 0.028091f, 0.023332f, 0.015508f, 0.068263f, 0.006731f, 0.065618f, 0.037211f, 0.099882f},
    {0.052911f, 0.002842f, 0.054849f, 0.013564f, 0.038289f, 0.041549f, 0.019640f, 0.078833f, 0.064019f, 0.042706f, 0.067385f, 0.010456f, 0.027685f, 0.016682f, 0.094055f, 0.028787f},
    {0.035916f, 0.085484f, 0.049877f, 0.091577f, 0.078071f, 0.014993f, 0.083452f, 0.027407f, 0.083896f, 0.067888f, 0.014094f, 0.094336f, 0.061871f, 0.002042f, 0.025571f, 0.051183f},
    {0.054965f, 0.004444f, 0.098264f, 0.024709f, 0.016479f, 0.054353f, 0.004369f, 0.013097f, 0.042217f, 0.063089f, 0.063473f, 0.085836f, 0.004703f, 0.099227f, 0.089519f, 0.044348f}
};

const float bias2[HIDDEN_DIM] = {
    0.042314f, 0.066371f, 0.094987f, 0.047453f, 0.063185f, 0.051868f, 0.087943f, 0.082518f,
    0.088105f, 0.039840f, 0.030858f, 0.086800f, 0.008609f, 0.044273f, 0.001078f, 0.048680f
};

const float weights3[HIDDEN_DIM][OUTPUT_DIM] = {
    {0.080785f, 0.084873f, 0.090157f},
    {0.052419f, 0.008537f, 0.083134f},
    {0.019220f, 0.027871f, 0.084752f},
    {0.061344f, 0.072883f, 0.068220f},
    {0.052068f, 0.010306f, 0.087573f},
    {0.095479f, 0.052504f, 0.014563f},
    {0.098294f, 0.045829f, 0.078594f},
    {0.087469f, 0.084659f, 0.030867f},
    {0.070082f, 0.035479f, 0.061294f},
    {0.023750f, 0.022315f, 0.041211f},
    {0.042121f, 0.094875f, 0.083352f},
    {0.022938f, 0.038209f, 0.082353f},
    {0.093155f, 0.092115f, 0.003448f},
    {0.006559f, 0.065831f, 0.031876f},
    {0.040647f, 0.042389f, 0.016438f},
    {0.097113f, 0.046878f, 0.048654f}
};

const float bias3[OUTPUT_DIM] = {
    0.096288f, 0.018529f, 0.039451f
};

#endif // TRAINED_WEIGHTS_DUMMY_H
